server.port=8080
spring.application.name=grex-springboot-service
spring.config.import=words.yaml,bots.yaml

cors.allowed-origins=*
cors.allowed-methods=GET,POST
cors.allowed-headers=Authorization,Content-Type
cors.allow-credentials=true
cors.max-age=3600

#### Database Configuration from AWS ####
## Run a docker postgres docker image
aws.ssm.db.url=jdbc:postgresql://grex-postgres-container:5432/mydb?stringtype=unspecified
aws.ssm.db.username=myuser
aws.ssm.db.password=mypassword
#aws.ssm.db.platform=postgresql

#### REDIS CACHE Configuration ####
redis.host=redis
redis.port=6379

#### BUNNY CDN CACHE ####
cdn.secret.header=CDN
cdn.secret.key=58361baa9ca5358037fe456958dcff201486a98210d6fc9320d55187dfa61be9

#### JWT Configuration from AWS ####
aws.ssm.jwt.secret.key=58361baa9ca5358037fe456958dcff201486a98210d6fc9320d55187dfa61be9
aws.ssm.jwt.secret.expiry=57600000

#### My Batis Configuration ####
mybatis.type-aliases-package=com.grex
mybatis.type-handlers-package=com.grex
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.configuration.default-fetch-size=100
mybatis.configuration.default-statement-timeout=30

aws.ses.from=example@gmail.com
aws.ses.subject=GREX OTP
aws.ses.body=Your OTP is:

#### Google ReCaptcha Configuration ####
google.recaptcha.secret.key=create your secret key
google.recaptcha.secret.url=https://www.google.com/recaptcha/api/siteverify
